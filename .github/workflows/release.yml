name: Branch Protection and Release Management

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  branch-protection:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check direct push to main
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "New branch creation detected"
          else
            echo "Direct push to main detected"
            exit 1
          fi

  create-release:
    needs: branch-protection
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get latest tag
        id: get-latest-tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Generate new version
        id: generate-version
        run: |
          current_version=${LATEST_TAG#v}
          IFS='.' read -ra version_parts <<< "$current_version"
          new_patch=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.$new_patch"
          echo "NEW_VERSION=v$new_version" >> $GITHUB_ENV

      - name: Generate changelog
        id: changelog
        run: |
          echo "### Changes" > changelog.md
          git log ${LATEST_TAG}..HEAD --pretty=format:"* %s" >> changelog.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          body_path: changelog.md
          draft: false
          prerelease: false
