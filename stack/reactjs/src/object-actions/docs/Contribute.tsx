import React, {useState} from 'react';
import {Box, List,} from '@mui/material';
import {StyledTypography} from "../components/StyledComponents";
import {CheckCircleOutline} from "@mui/icons-material";
import {NavBarItem} from "../../components/AuthMenu";

interface Task {
    description: string;
    link: string;
}

const tasks: Task[] = [
    {
        description: "Split Users from other EntityTypes",
        link: "https://github.com/eliataylor/objects-actions/blob/main/stack/databuilder/src/types.ts#L16",
    },
    {
        description: "Implement Django User Groups and Permissions",
        link: "https://github.com/eliataylor/object-actions/blob/main/stack/django/oaexample_app/permissions.py",
    },
    {
        description: "Implement React render checks against permissions like can_verb",
        link: "https://github.com/eliataylor/object-actions/blob/main/stack/reactjs/src/object-actions/types/access.tsx#L72",
    },
    {
        description:
            "Implement Cypress tests against permissions.json. Fixtures can be generated by Databuilder",
        link: "https://github.com/eliataylor/object-actions/blob/main/stack/cypress/cypress/support/permissions.json",
    },
    {
        description: "Finish K6 load tests",
        link: "https://github.com/eliataylor/object-actions/blob/main/stack/k6/localhost.js",
    },
    {
        description: "Generate empty Worksheets for given Object list",
        link: "https://github.com/eliataylor/object-actions/blob/main/src/generate.py#L26",
    },
    {
        description: "Generate Django/TypeScript directly from Google Sheets",
        link: "https://github.com/eliataylor/object-actions/blob/main/src/generate.py#L26",
    },
    {
        description: "Drupal builder",
        link: "https://github.com/eliataylor/object-actions/blob/main/src/generate.py#L26",
    },
    {
        description: "KeystoneJS builder",
        link: "https://github.com/eliataylor/object-actions/blob/main/src/generate.py#L26",
    },
];

const Contribute: React.FC = () => {

    return (
        <Box>
            <StyledTypography variant="h1">Contribute</StyledTypography>
            <StyledTypography variant="subtitle1">
                Review our Issues on Github or the Development Roadmap below and get in where you fit in
            </StyledTypography>
            <List dense={true}>
                {tasks.map((task, index) => (
                    <NavBarItem to={task.link} icon={<CheckCircleOutline fontSize={'small'}/>}
                                name={task.description}/>
                ))}
            </List>
        </Box>
    );
};

export default Contribute;
